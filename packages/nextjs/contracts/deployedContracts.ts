/**
 * This file is autogenerated by FIL-Frame.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/fil-frame/contract";

const deployedContracts = {
  314159: {
    DealClient: {
      address: "0xAD8460561a247Fcbe133Adf75d5C35ABFCf8487F",
      abi: [
        {
          inputs: [],
          name: "InvalidAddress",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "length",
              type: "uint256",
            },
          ],
          name: "StringsInsufficientHexLength",
          type: "error",
        },
        {
          inputs: [],
          name: "AUTHENTICATE_MESSAGE_METHOD_NUM",
          outputs: [
            {
              internalType: "uint64",
              name: "",
              type: "uint64",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "DATACAP_ACTOR_ETH_ADDRESS",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "DATACAP_RECEIVER_HOOK_METHOD_NUM",
          outputs: [
            {
              internalType: "uint64",
              name: "",
              type: "uint64",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "MARKET_ACTOR_ETH_ADDRESS",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "MARKET_NOTIFY_DEAL_METHOD_NUM",
          outputs: [
            {
              internalType: "uint64",
              name: "",
              type: "uint64",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "bridgeContract",
          outputs: [
            {
              internalType: "contract IBridgeContract",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint64",
              name: "method",
              type: "uint64",
            },
            {
              internalType: "uint64",
              name: "",
              type: "uint64",
            },
            {
              internalType: "bytes",
              name: "params",
              type: "bytes",
            },
          ],
          name: "handle_filecoin_method",
          outputs: [
            {
              internalType: "uint32",
              name: "",
              type: "uint32",
            },
            {
              internalType: "uint64",
              name: "",
              type: "uint64",
            },
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          name: "pieceDeals",
          outputs: [
            {
              internalType: "uint64",
              name: "",
              type: "uint64",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          name: "pieceStatus",
          outputs: [
            {
              internalType: "enum DealClient.Status",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_bridgeContract",
              type: "address",
            },
          ],
          name: "setBridgeContract",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    DealClientAxl: {
      address: "0xF8DAEa71A4C39d717703017D3c1AE88623eb0658",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_gateway",
              type: "address",
            },
            {
              internalType: "address",
              name: "_gasReceiver",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "InvalidAddress",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidAddress",
          type: "error",
        },
        {
          inputs: [],
          name: "NotApprovedByGateway",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "length",
              type: "uint256",
            },
          ],
          name: "StringsInsufficientHexLength",
          type: "error",
        },
        {
          inputs: [],
          name: "AUTHENTICATE_MESSAGE_METHOD_NUM",
          outputs: [
            {
              internalType: "uint64",
              name: "",
              type: "uint64",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "AXELAR_GAS_FEE",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "DATACAP_ACTOR_ETH_ADDRESS",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "DATACAP_RECEIVER_HOOK_METHOD_NUM",
          outputs: [
            {
              internalType: "uint64",
              name: "",
              type: "uint64",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "MARKET_ACTOR_ETH_ADDRESS",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "MARKET_NOTIFY_DEAL_METHOD_NUM",
          outputs: [
            {
              internalType: "uint64",
              name: "",
              type: "uint64",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "providerAddrData",
              type: "bytes",
            },
          ],
          name: "addGasFunds",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "chainIdToSrcChain",
          outputs: [
            {
              internalType: "string",
              name: "chainName",
              type: "string",
            },
            {
              internalType: "address",
              name: "oracleContractAddress",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "commp",
              type: "bytes",
            },
            {
              internalType: "bytes",
              name: "providerAddrData",
              type: "bytes",
            },
            {
              internalType: "uint256",
              name: "gasFunds",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "chainId",
              type: "uint256",
            },
          ],
          name: "debug_call",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "commandId",
              type: "bytes32",
            },
            {
              internalType: "string",
              name: "sourceChain",
              type: "string",
            },
            {
              internalType: "string",
              name: "sourceAddress",
              type: "string",
            },
            {
              internalType: "bytes",
              name: "payload",
              type: "bytes",
            },
          ],
          name: "execute",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "gasService",
          outputs: [
            {
              internalType: "contract IAxelarGasService",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "gateway",
          outputs: [
            {
              internalType: "contract IAxelarGateway",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint64",
              name: "method",
              type: "uint64",
            },
            {
              internalType: "uint64",
              name: "",
              type: "uint64",
            },
            {
              internalType: "bytes",
              name: "params",
              type: "bytes",
            },
          ],
          name: "handle_filecoin_method",
          outputs: [
            {
              internalType: "uint32",
              name: "",
              type: "uint32",
            },
            {
              internalType: "uint64",
              name: "",
              type: "uint64",
            },
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          name: "pieceDeals",
          outputs: [
            {
              internalType: "uint64",
              name: "",
              type: "uint64",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          name: "pieceStatus",
          outputs: [
            {
              internalType: "enum DealClientAxl.Status",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          name: "providerGasFunds",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256[]",
              name: "srcChainIds",
              type: "uint256[]",
            },
            {
              internalType: "string[]",
              name: "srcChainNames",
              type: "string[]",
            },
            {
              internalType: "address[]",
              name: "srcOracleAddresses",
              type: "address[]",
            },
          ],
          name: "setSourceChains",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    DealInfo: {
      address: "0x0FC5E1de65f582d00bE117Dd9F87223f09eDB6fE",
      abi: [
        {
          inputs: [],
          name: "ActorNotFound",
          type: "error",
        },
        {
          inputs: [],
          name: "FailToCallActor",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint64",
              name: "",
              type: "uint64",
            },
          ],
          name: "InvalidCodec",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidResponseLength",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "balance",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "NotEnoughBalance",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint64",
              name: "dealId",
              type: "uint64",
            },
          ],
          name: "getAllDealData",
          outputs: [
            {
              components: [
                {
                  components: [
                    {
                      internalType: "bytes",
                      name: "data",
                      type: "bytes",
                    },
                    {
                      internalType: "bool",
                      name: "isString",
                      type: "bool",
                    },
                  ],
                  internalType: "struct CommonTypes.DealLabel",
                  name: "dealLabel",
                  type: "tuple",
                },
                {
                  internalType: "uint64",
                  name: "dealClientActorId",
                  type: "uint64",
                },
                {
                  internalType: "uint64",
                  name: "dealProviderActorId",
                  type: "uint64",
                },
                {
                  components: [
                    {
                      internalType: "bytes",
                      name: "data",
                      type: "bytes",
                    },
                    {
                      internalType: "uint64",
                      name: "size",
                      type: "uint64",
                    },
                  ],
                  internalType:
                    "struct MarketTypes.GetDealDataCommitmentReturn",
                  name: "dealCommitment",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "CommonTypes.ChainEpoch",
                      name: "start",
                      type: "int64",
                    },
                    {
                      internalType: "CommonTypes.ChainEpoch",
                      name: "duration",
                      type: "int64",
                    },
                  ],
                  internalType: "struct MarketTypes.GetDealTermReturn",
                  name: "dealTerm",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "bytes",
                      name: "val",
                      type: "bytes",
                    },
                    {
                      internalType: "bool",
                      name: "neg",
                      type: "bool",
                    },
                  ],
                  internalType: "struct CommonTypes.BigInt",
                  name: "dealPricePerEpoch",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "bytes",
                      name: "val",
                      type: "bytes",
                    },
                    {
                      internalType: "bool",
                      name: "neg",
                      type: "bool",
                    },
                  ],
                  internalType: "struct CommonTypes.BigInt",
                  name: "clientCollateral",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "bytes",
                      name: "val",
                      type: "bytes",
                    },
                    {
                      internalType: "bool",
                      name: "neg",
                      type: "bool",
                    },
                  ],
                  internalType: "struct CommonTypes.BigInt",
                  name: "providerCollateral",
                  type: "tuple",
                },
                {
                  internalType: "bool",
                  name: "isDealActivated",
                  type: "bool",
                },
                {
                  components: [
                    {
                      internalType: "CommonTypes.ChainEpoch",
                      name: "activated",
                      type: "int64",
                    },
                    {
                      internalType: "CommonTypes.ChainEpoch",
                      name: "terminated",
                      type: "int64",
                    },
                  ],
                  internalType: "struct MarketTypes.GetDealActivationReturn",
                  name: "activationStatus",
                  type: "tuple",
                },
              ],
              internalType: "struct DealInfo.DealData",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint64",
              name: "dealId",
              type: "uint64",
            },
          ],
          name: "getClientCollateral",
          outputs: [
            {
              components: [
                {
                  internalType: "bytes",
                  name: "val",
                  type: "bytes",
                },
                {
                  internalType: "bool",
                  name: "neg",
                  type: "bool",
                },
              ],
              internalType: "struct CommonTypes.BigInt",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint64",
              name: "dealId",
              type: "uint64",
            },
          ],
          name: "getDealActivationStatus",
          outputs: [
            {
              components: [
                {
                  internalType: "CommonTypes.ChainEpoch",
                  name: "activated",
                  type: "int64",
                },
                {
                  internalType: "CommonTypes.ChainEpoch",
                  name: "terminated",
                  type: "int64",
                },
              ],
              internalType: "struct MarketTypes.GetDealActivationReturn",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint64",
              name: "dealId",
              type: "uint64",
            },
          ],
          name: "getDealClient",
          outputs: [
            {
              internalType: "uint64",
              name: "",
              type: "uint64",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint64",
              name: "dealId",
              type: "uint64",
            },
          ],
          name: "getDealCommitment",
          outputs: [
            {
              components: [
                {
                  internalType: "bytes",
                  name: "data",
                  type: "bytes",
                },
                {
                  internalType: "uint64",
                  name: "size",
                  type: "uint64",
                },
              ],
              internalType: "struct MarketTypes.GetDealDataCommitmentReturn",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint64",
              name: "dealId",
              type: "uint64",
            },
          ],
          name: "getDealLabel",
          outputs: [
            {
              components: [
                {
                  internalType: "bytes",
                  name: "data",
                  type: "bytes",
                },
                {
                  internalType: "bool",
                  name: "isString",
                  type: "bool",
                },
              ],
              internalType: "struct CommonTypes.DealLabel",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint64",
              name: "dealId",
              type: "uint64",
            },
          ],
          name: "getDealProvider",
          outputs: [
            {
              internalType: "uint64",
              name: "",
              type: "uint64",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint64",
              name: "dealId",
              type: "uint64",
            },
          ],
          name: "getDealTerm",
          outputs: [
            {
              components: [
                {
                  internalType: "CommonTypes.ChainEpoch",
                  name: "start",
                  type: "int64",
                },
                {
                  internalType: "CommonTypes.ChainEpoch",
                  name: "duration",
                  type: "int64",
                },
              ],
              internalType: "struct MarketTypes.GetDealTermReturn",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint64",
              name: "dealId",
              type: "uint64",
            },
          ],
          name: "getDealTotalPrice",
          outputs: [
            {
              components: [
                {
                  internalType: "bytes",
                  name: "val",
                  type: "bytes",
                },
                {
                  internalType: "bool",
                  name: "neg",
                  type: "bool",
                },
              ],
              internalType: "struct CommonTypes.BigInt",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint64",
              name: "dealId",
              type: "uint64",
            },
          ],
          name: "getDealVerification",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint64",
              name: "dealId",
              type: "uint64",
            },
          ],
          name: "getProviderCollateral",
          outputs: [
            {
              components: [
                {
                  internalType: "bytes",
                  name: "val",
                  type: "bytes",
                },
                {
                  internalType: "bool",
                  name: "neg",
                  type: "bool",
                },
              ],
              internalType: "struct CommonTypes.BigInt",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    ForwardingProofMockBridge: {
      address: "0x184c5a0f24f68059Dd33F770928c7Fc73c789664",
      abi: [
        {
          inputs: [
            {
              internalType: "string",
              name: "_sourceChain_",
              type: "string",
            },
            {
              internalType: "string",
              name: "sourceAddress_",
              type: "string",
            },
            {
              internalType: "bytes",
              name: "payload_",
              type: "bytes",
            },
          ],
          name: "_execute",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "receiver",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "senderHex",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "senderHex_",
              type: "string",
            },
            {
              internalType: "address",
              name: "receiver_",
              type: "address",
            },
          ],
          name: "setSenderReceiver",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    Nickle: {
      address: "0xff7Bea1bB5B839064217270C63A1FFD4D24561ae",
      abi: [
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "allowance",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "needed",
              type: "uint256",
            },
          ],
          name: "ERC20InsufficientAllowance",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "sender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "balance",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "needed",
              type: "uint256",
            },
          ],
          name: "ERC20InsufficientBalance",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "approver",
              type: "address",
            },
          ],
          name: "ERC20InvalidApprover",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "receiver",
              type: "address",
            },
          ],
          name: "ERC20InvalidReceiver",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "sender",
              type: "address",
            },
          ],
          name: "ERC20InvalidSender",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
          ],
          name: "ERC20InvalidSpender",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Approval",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Transfer",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
          ],
          name: "allowance",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "approve",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "balanceOf",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "decimals",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "name",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "symbol",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "totalSupply",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "transfer",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "transferFrom",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    OnRampContract: {
      address: "0x77A297a19fc48a9B70c74C388d3a419e13aBCd0e",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "bytes",
                  name: "commP",
                  type: "bytes",
                },
                {
                  internalType: "uint64",
                  name: "size",
                  type: "uint64",
                },
                {
                  internalType: "string",
                  name: "cid",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "location",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "amount",
                  type: "uint256",
                },
                {
                  internalType: "contract IERC20",
                  name: "token",
                  type: "address",
                },
              ],
              indexed: false,
              internalType: "struct OnRampContract.Offer",
              name: "offer",
              type: "tuple",
            },
            {
              indexed: false,
              internalType: "uint64",
              name: "id",
              type: "uint64",
            },
          ],
          name: "DataReady",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint64",
              name: "",
              type: "uint64",
            },
          ],
          name: "aggregationPayout",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint64",
              name: "",
              type: "uint64",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "aggregations",
          outputs: [
            {
              internalType: "uint64",
              name: "",
              type: "uint64",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          name: "commPToAggregateID",
          outputs: [
            {
              internalType: "uint64",
              name: "",
              type: "uint64",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "aggregate",
              type: "bytes",
            },
            {
              internalType: "uint64[]",
              name: "claimedIDs",
              type: "uint64[]",
            },
            {
              components: [
                {
                  internalType: "uint64",
                  name: "index",
                  type: "uint64",
                },
                {
                  internalType: "bytes32[]",
                  name: "path",
                  type: "bytes32[]",
                },
              ],
              internalType: "struct PODSIVerifier.ProofData[]",
              name: "inclusionProofs",
              type: "tuple[]",
            },
            {
              internalType: "address",
              name: "payoutAddr",
              type: "address",
            },
          ],
          name: "commitAggregate",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "dataProofOracle",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "bytes",
                  name: "commP",
                  type: "bytes",
                },
                {
                  internalType: "uint64",
                  name: "size",
                  type: "uint64",
                },
                {
                  internalType: "string",
                  name: "cid",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "location",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "amount",
                  type: "uint256",
                },
                {
                  internalType: "contract IERC20",
                  name: "token",
                  type: "address",
                },
              ],
              internalType: "struct OnRampContract.Offer",
              name: "offer",
              type: "tuple",
            },
          ],
          name: "offerData",
          outputs: [
            {
              internalType: "uint64",
              name: "",
              type: "uint64",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint64",
              name: "",
              type: "uint64",
            },
          ],
          name: "offers",
          outputs: [
            {
              internalType: "bytes",
              name: "commP",
              type: "bytes",
            },
            {
              internalType: "uint64",
              name: "size",
              type: "uint64",
            },
            {
              internalType: "string",
              name: "cid",
              type: "string",
            },
            {
              internalType: "string",
              name: "location",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              internalType: "contract IERC20",
              name: "token",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "bytes",
                  name: "commP",
                  type: "bytes",
                },
                {
                  internalType: "int64",
                  name: "duration",
                  type: "int64",
                },
                {
                  internalType: "uint64",
                  name: "FILID",
                  type: "uint64",
                },
                {
                  internalType: "uint256",
                  name: "status",
                  type: "uint256",
                },
              ],
              internalType: "struct DataAttestation",
              name: "attestation",
              type: "tuple",
            },
          ],
          name: "proveDataStored",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint64",
              name: "",
              type: "uint64",
            },
          ],
          name: "provenAggregations",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "oracle_",
              type: "address",
            },
          ],
          name: "setOracle",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint64",
                  name: "index",
                  type: "uint64",
                },
                {
                  internalType: "bytes32[]",
                  name: "path",
                  type: "bytes32[]",
                },
              ],
              internalType: "struct PODSIVerifier.ProofData",
              name: "proof",
              type: "tuple",
            },
            {
              internalType: "bytes32",
              name: "root",
              type: "bytes32",
            },
            {
              internalType: "bytes32",
              name: "leaf",
              type: "bytes32",
            },
          ],
          name: "verify",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint64",
              name: "aggID",
              type: "uint64",
            },
            {
              internalType: "uint256",
              name: "idx",
              type: "uint256",
            },
            {
              internalType: "uint64",
              name: "offerID",
              type: "uint64",
            },
          ],
          name: "verifyDataStored",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
